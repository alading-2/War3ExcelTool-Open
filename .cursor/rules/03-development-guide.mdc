---
description: 
globs: 
alwaysApply: false
---
# 开发指南

## 开发环境设置

1. 克隆仓库
2. 安装依赖：`pip install -r requirements.txt`
3. 使用Python 3.8+

## 项目配置

配置文件位于[src/config.cfg](mdc:src/config.cfg)，支持以下选项：

- `convert_to_ts` - 是否转换为TypeScript
- `convert_to_lua` - 是否转换为Lua
- `convert_to_ini` - 是否转换为INI
- `convert_ini_to_excel` - 是否将INI转回Excel
- `recursive` - 是否递归处理子目录
- `log_level` - 日志级别
- `baize_frame` - 是否使用baize框架格式

## 代码风格指南

- 遵循PEP 8规范
- 使用类型注解
- 添加清晰的文档字符串

## 添加新功能

### 添加新的输出格式

1. 在`src/core/`目录下创建新的生成器文件，如`new_format_generator.py`
2. 在[src/core/processor.py](mdc:src/core/processor.py)中添加对新格式的支持
3. 在配置管理器[src/utils/config_manager.py](mdc:src/utils/config_manager.py)中添加相应的配置选项
4. 在UI[src/ui/main_window.py](mdc:src/ui/main_window.py)中添加对应的控件

### 扩展现有功能

- 所有核心功能都基于插件式架构设计
- 数据处理逻辑在[src/core/data_handler.py](mdc:src/core/data_handler.py)
- 参考现有模块的实现方式

## 打包应用

使用以下命令打包应用：

```
python build.py
```

打包过程在[build.py](mdc:build.py)中定义

