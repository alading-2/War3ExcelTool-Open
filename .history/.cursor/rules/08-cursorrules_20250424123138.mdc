---
description: 
globs: 
alwaysApply: true
---
# CursorRules 总结

本规则文件总结了用户在与Cursor对话和协作开发过程中的实际经验，旨在帮助后续开发者更高效地与Cursor配合。

## 规则部分（重点）
# 用户自定义规则（关键）
- 用户给出方案希望总结优化时，应该指出用户没说清楚的地方，并详细给出总结优化的建议
- 用户说生成提示词时，同时要生成项目的详细实现步骤
- 生成阶段，按照实现步骤分阶段、分文件提出详细的改进计划和代码实现建议，每一步在做什么，核心思路是什么要说清楚，你觉得不清楚的地方要提出来。并且每一步需要经过用户审查，如果用户不满意需要及时根据用户修改要求更改项目执行方案，如果用户满意则继续之前的步骤

# GUI参数管理常见错误与规避规则

- 必须严格区分"功能参数"和"辅助参数"，功能参数只出现在主界面，辅助参数只出现在高级设置（如config_dialog.py），不得混淆。
- ConfigManager、GUI界面和配置文件三者的参数必须保持同步，任何一方变更都要及时同步到其他两方，防止参数丢失或不同步。
- 所有参数命名必须统一、规范，注释要详细、准确，便于用户理解和后续维护。
- 设计或调整参数管理方案时，必须充分征求用户意见，未经用户确认不得擅自更改参数分组或添加命令行参数。
- 自动生成GUI控件时，必须根据参数类型和分组自动选择合适的控件类型和布局，提升界面体验。
- 严格遵循"用户未指定不主动添加命令行参数"的规则，避免参数膨胀和界面混乱。
- 在涉及参数类型转换、控件生成等细节时，必须查阅PyQt等官方文档，避免凭经验操作导致Bug。


# 通用规则
- 所有生成内容必须用中文，用户说生成提示词，主要是给AI用的
- 每次调用Python库时，**必须查阅官方文档**，不要凭经验猜测参数或用法，避免因参数错误导致的Bug。
- 生成的所有代码和注释**必须为中文**，确保团队成员易于理解和维护。
- 当用户发出"总结优化"或"生成提示词"请求时，**不要直接生成代码**，而是先等待用户进一步确认。
- 用户会根据AI的建议不断优化提示词文档，通常放在`else\DOC`目录。**AI必须实时响应用户最新的需求和指令**，不要机械地沿用旧对话内容。
- 依赖安装命令需考虑本地无SSL证书环境，**pip命令要避免SSL相关报错**。
- 代码异常处理要**主动捕获并打印堆栈信息和请求参数**，方便后续排查。
- AI应主动推进项目进度，**不要被动等待用户多次推动**。
- 需求分析时要**站在用户角度思考**，并以产品经理视角补全和优化需求。
- 代码开发要**遵循PEP8、类型注解、模块化、单元测试**等最佳实践。
- 解决问题时要**先全面阅读相关代码，理解后再动手**，并与用户多次交互，及时调整方案。
- 项目总结阶段要**反思流程、更新文档、优化性能**，并持续完善README。
- 始终以[Python官方文档](mdc:https:/docs.python.org)为权威参考。

# 本项目规则
- 用户说名要添加参数时，如果没指明要添加命令行参数，就不要自行添加命令行参数，参数分功能参数和辅助参数，
功能参数要添加到主界面
辅助参数添加到文件→高级设置，也就是config_dialog.py里面
功能参数：
"convert_to_ts": False,  # 是否执行 Excel -> TS 转换
"convert_to_lua": False,  # 是否执行 Excel -> Lua 转换
"convert_to_ini": False,  # 是否执行 Excel -> Ini 转换
"convert_ini_to_excel": False,  # 是否执行 Ini -> Excel 转换
"baize_frame": True,  # 白泽框架
"parse_w3x": False,  # 是否解析w3x
辅助参数：
"recursive": True,  # 是否递归处理输入目录
"log_level": "INFO",  # 日志级别
"sort_by_alpha": False,  # 生成表格是否按字母排序
"font_size": 14,  # 字体大小


> 以上规则均为实际开发和AI协作过程中总结的经验，强烈建议后续AI遵循。



> 以上规则为实际开发过程中AI在GUI参数管理方面犯过的典型错误总结，后续开发者应引以为戒，严格遵循。

